(sigma.Config) {
  Title: (string) (len=54) "Conversion of Generic Rules into Sysmon Specific Rules",
  Order: (int) 10,
  Backends: ([]string) <nil>,
  FieldMappings: (map[string]sigma.FieldMapping) <nil>,
  Logsources: (map[string]sigma.LogsourceMapping) (len=9) {
    (string) (len=9) "dns_query": (sigma.LogsourceMapping) {
      Logsource: (sigma.Logsource) {
        Category: (string) (len=9) "dns_query",
        Product: (string) (len=7) "windows",
        Service: (string) "",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      },
      Index: (sigma.LogsourceIndexes) <nil>,
      Conditions: (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=2) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=7) "EventID",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 26,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!int",
              Value: (string) (len=2) "22",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 26,
              Column: (int) 16
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 26,
          Column: (int) 7
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=7) "EventID",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 26,
                Column: (int) 7
              }),
              Field: (string) (len=7) "EventID",
              Modifiers: ([]string) {
              },
              Values: ([]interface {}) (len=1) {
                (int) 22
              }
            }
          }
        }
      },
      Rewrite: (sigma.Logsource) {
        Category: (string) "",
        Product: (string) (len=7) "windows",
        Service: (string) (len=6) "sysmon",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      }
    },
    (string) (len=13) "driver_loaded": (sigma.LogsourceMapping) {
      Logsource: (sigma.Logsource) {
        Category: (string) (len=11) "driver_load",
        Product: (string) (len=7) "windows",
        Service: (string) "",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      },
      Index: (sigma.LogsourceIndexes) <nil>,
      Conditions: (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=2) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=7) "EventID",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 69,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!int",
              Value: (string) (len=1) "6",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 69,
              Column: (int) 16
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 69,
          Column: (int) 7
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=7) "EventID",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 69,
                Column: (int) 7
              }),
              Field: (string) (len=7) "EventID",
              Modifiers: ([]string) {
              },
              Values: ([]interface {}) (len=1) {
                (int) 6
              }
            }
          }
        }
      },
      Rewrite: (sigma.Logsource) {
        Category: (string) "",
        Product: (string) (len=7) "windows",
        Service: (string) (len=6) "sysmon",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      }
    },
    (string) (len=13) "file_creation": (sigma.LogsourceMapping) {
      Logsource: (sigma.Logsource) {
        Category: (string) (len=10) "file_event",
        Product: (string) (len=7) "windows",
        Service: (string) "",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      },
      Index: (sigma.LogsourceIndexes) <nil>,
      Conditions: (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=2) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=7) "EventID",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 45,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!int",
              Value: (string) (len=2) "11",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 45,
              Column: (int) 16
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 45,
          Column: (int) 7
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=7) "EventID",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 45,
                Column: (int) 7
              }),
              Field: (string) (len=7) "EventID",
              Modifiers: ([]string) {
              },
              Values: ([]interface {}) (len=1) {
                (int) 11
              }
            }
          }
        }
      },
      Rewrite: (sigma.Logsource) {
        Category: (string) "",
        Product: (string) (len=7) "windows",
        Service: (string) (len=6) "sysmon",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      }
    },
    (string) (len=12) "image_loaded": (sigma.LogsourceMapping) {
      Logsource: (sigma.Logsource) {
        Category: (string) (len=10) "image_load",
        Product: (string) (len=7) "windows",
        Service: (string) "",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      },
      Index: (sigma.LogsourceIndexes) <nil>,
      Conditions: (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=2) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=7) "EventID",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 61,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!int",
              Value: (string) (len=1) "7",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 61,
              Column: (int) 16
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 61,
          Column: (int) 7
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=7) "EventID",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 61,
                Column: (int) 7
              }),
              Field: (string) (len=7) "EventID",
              Modifiers: ([]string) {
              },
              Values: ([]interface {}) (len=1) {
                (int) 7
              }
            }
          }
        }
      },
      Rewrite: (sigma.Logsource) {
        Category: (string) "",
        Product: (string) (len=7) "windows",
        Service: (string) (len=6) "sysmon",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      }
    },
    (string) (len=18) "network_connection": (sigma.LogsourceMapping) {
      Logsource: (sigma.Logsource) {
        Category: (string) (len=18) "network_connection",
        Product: (string) (len=7) "windows",
        Service: (string) "",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      },
      Index: (sigma.LogsourceIndexes) <nil>,
      Conditions: (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=2) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=7) "EventID",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 18,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!int",
              Value: (string) (len=1) "3",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 18,
              Column: (int) 16
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 18,
          Column: (int) 7
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=7) "EventID",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 18,
                Column: (int) 7
              }),
              Field: (string) (len=7) "EventID",
              Modifiers: ([]string) {
              },
              Values: ([]interface {}) (len=1) {
                (int) 3
              }
            }
          }
        }
      },
      Rewrite: (sigma.Logsource) {
        Category: (string) "",
        Product: (string) (len=7) "windows",
        Service: (string) (len=6) "sysmon",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      }
    },
    (string) (len=14) "process_access": (sigma.LogsourceMapping) {
      Logsource: (sigma.Logsource) {
        Category: (string) (len=14) "process_access",
        Product: (string) (len=7) "windows",
        Service: (string) "",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      },
      Index: (sigma.LogsourceIndexes) <nil>,
      Conditions: (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=2) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=7) "EventID",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 53,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!int",
              Value: (string) (len=2) "10",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 53,
              Column: (int) 16
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 53,
          Column: (int) 7
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=7) "EventID",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 53,
                Column: (int) 7
              }),
              Field: (string) (len=7) "EventID",
              Modifiers: ([]string) {
              },
              Values: ([]interface {}) (len=1) {
                (int) 10
              }
            }
          }
        }
      },
      Rewrite: (sigma.Logsource) {
        Category: (string) "",
        Product: (string) (len=7) "windows",
        Service: (string) (len=6) "sysmon",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      }
    },
    (string) (len=16) "process_creation": (sigma.LogsourceMapping) {
      Logsource: (sigma.Logsource) {
        Category: (string) (len=16) "process_creation",
        Product: (string) (len=7) "windows",
        Service: (string) "",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      },
      Index: (sigma.LogsourceIndexes) <nil>,
      Conditions: (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=2) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=7) "EventID",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 10,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!int",
              Value: (string) (len=1) "1",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 10,
              Column: (int) 16
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 10,
          Column: (int) 7
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=7) "EventID",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 10,
                Column: (int) 7
              }),
              Field: (string) (len=7) "EventID",
              Modifiers: ([]string) {
              },
              Values: ([]interface {}) (len=1) {
                (int) 1
              }
            }
          }
        }
      },
      Rewrite: (sigma.Logsource) {
        Category: (string) "",
        Product: (string) (len=7) "windows",
        Service: (string) (len=6) "sysmon",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      }
    },
    (string) (len=18) "process_terminated": (sigma.LogsourceMapping) {
      Logsource: (sigma.Logsource) {
        Category: (string) (len=19) "process_termination",
        Product: (string) (len=7) "windows",
        Service: (string) "",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      },
      Index: (sigma.LogsourceIndexes) <nil>,
      Conditions: (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=2) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=7) "EventID",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 77,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!int",
              Value: (string) (len=1) "5",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 77,
              Column: (int) 16
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 77,
          Column: (int) 7
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=7) "EventID",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 77,
                Column: (int) 7
              }),
              Field: (string) (len=7) "EventID",
              Modifiers: ([]string) {
              },
              Values: ([]interface {}) (len=1) {
                (int) 5
              }
            }
          }
        }
      },
      Rewrite: (sigma.Logsource) {
        Category: (string) "",
        Product: (string) (len=7) "windows",
        Service: (string) (len=6) "sysmon",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      }
    },
    (string) (len=14) "registry_event": (sigma.LogsourceMapping) {
      Logsource: (sigma.Logsource) {
        Category: (string) (len=14) "registry_event",
        Product: (string) (len=7) "windows",
        Service: (string) "",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      },
      Index: (sigma.LogsourceIndexes) <nil>,
      Conditions: (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=2) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=7) "EventID",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 34,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 2,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!seq",
              Value: (string) "",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) (len=3) {
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 0,
                  Tag: (string) (len=5) "!!int",
                  Value: (string) (len=2) "12",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 35,
                  Column: (int) 11
                }),
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 0,
                  Tag: (string) (len=5) "!!int",
                  Value: (string) (len=2) "13",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 36,
                  Column: (int) 11
                }),
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 0,
                  Tag: (string) (len=5) "!!int",
                  Value: (string) (len=2) "14",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 37,
                  Column: (int) 11
                })
              },
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 35,
              Column: (int) 9
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 34,
          Column: (int) 7
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=7) "EventID",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 34,
                Column: (int) 7
              }),
              Field: (string) (len=7) "EventID",
              Modifiers: ([]string) {
              },
              Values: ([]interface {}) (len=3) {
                (int) 12,
                (int) 13,
                (int) 14
              }
            }
          }
        }
      },
      Rewrite: (sigma.Logsource) {
        Category: (string) "",
        Product: (string) (len=7) "windows",
        Service: (string) (len=6) "sysmon",
        Definition: (string) "",
        AdditionalFields: (map[string]interface {}) <nil>
      }
    }
  },
  DefaultIndex: (string) "",
  Placeholders: (map[string][]interface {}) <nil>
}

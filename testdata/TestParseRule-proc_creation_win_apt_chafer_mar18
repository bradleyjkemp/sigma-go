(sigma.Rule) {
  Title: (string) (len=15) "Chafer Activity",
  Logsource: (sigma.Logsource) {
    Category: (string) (len=16) "process_creation",
    Product: (string) (len=7) "windows",
    Service: (string) "",
    Definition: (string) "",
    AdditionalFields: (map[string]interface {}) <nil>
  },
  Detection: (sigma.Detection) {
    Searches: (map[string]sigma.Search) (len=4) {
      (string) (len=18) "selection_process0": (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=4) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=20) "CommandLine|contains",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 28,
              Column: (int) 5
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 4,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=12) "\\Service.exe",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 28,
              Column: (int) 27
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=20) "CommandLine|endswith",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 29,
              Column: (int) 5
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 2,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!seq",
              Value: (string) "",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) (len=2) {
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 4,
                  Tag: (string) (len=5) "!!str",
                  Value: (string) (len=1) "i",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 30,
                  Column: (int) 9
                }),
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 4,
                  Tag: (string) (len=5) "!!str",
                  Value: (string) (len=1) "u",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 31,
                  Column: (int) 9
                })
              },
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 30,
              Column: (int) 7
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 28,
          Column: (int) 5
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=2) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=20) "CommandLine|contains",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 28,
                Column: (int) 5
              }),
              Field: (string) (len=11) "CommandLine",
              Modifiers: ([]string) (len=1) {
                (string) (len=8) "contains"
              },
              Values: ([]interface {}) (len=1) {
                (string) (len=12) "\\Service.exe"
              }
            },
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=20) "CommandLine|endswith",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 29,
                Column: (int) 5
              }),
              Field: (string) (len=11) "CommandLine",
              Modifiers: ([]string) (len=1) {
                (string) (len=8) "endswith"
              },
              Values: ([]interface {}) (len=2) {
                (string) (len=1) "i",
                (string) (len=1) "u"
              }
            }
          }
        }
      },
      (string) (len=18) "selection_process1": (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 2,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!seq",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=2) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 4,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!map",
              Value: (string) "",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) (len=2) {
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 0,
                  Tag: (string) (len=5) "!!str",
                  Value: (string) (len=20) "CommandLine|endswith",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 33,
                  Column: (int) 7
                }),
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 4,
                  Tag: (string) (len=5) "!!str",
                  Value: (string) (len=30) "\\microsoft\\Taskbar\\autoit3.exe",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 33,
                  Column: (int) 29
                })
              },
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 33,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 4,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!map",
              Value: (string) "",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) (len=2) {
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 0,
                  Tag: (string) (len=5) "!!str",
                  Value: (string) (len=22) "CommandLine|startswith",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 34,
                  Column: (int) 7
                }),
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 4,
                  Tag: (string) (len=5) "!!str",
                  Value: (string) (len=10) "C:\\wsc.exe",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 34,
                  Column: (int) 31
                })
              },
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 34,
              Column: (int) 7
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 33,
          Column: (int) 5
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=2) {
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=20) "CommandLine|endswith",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 33,
                Column: (int) 7
              }),
              Field: (string) (len=11) "CommandLine",
              Modifiers: ([]string) (len=1) {
                (string) (len=8) "endswith"
              },
              Values: ([]interface {}) (len=1) {
                (string) (len=30) "\\microsoft\\Taskbar\\autoit3.exe"
              }
            }
          },
          (sigma.EventMatcher) (len=1) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=22) "CommandLine|startswith",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 34,
                Column: (int) 7
              }),
              Field: (string) (len=11) "CommandLine",
              Modifiers: ([]string) (len=1) {
                (string) (len=10) "startswith"
              },
              Values: ([]interface {}) (len=1) {
                (string) (len=10) "C:\\wsc.exe"
              }
            }
          }
        }
      },
      (string) (len=18) "selection_process2": (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=4) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=14) "Image|contains",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 36,
              Column: (int) 5
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 4,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=17) "\\Windows\\Temp\\DB\\",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 36,
              Column: (int) 21
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=14) "Image|endswith",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 37,
              Column: (int) 5
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 4,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=4) ".exe",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 37,
              Column: (int) 21
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 36,
          Column: (int) 5
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=2) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=14) "Image|contains",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 36,
                Column: (int) 5
              }),
              Field: (string) (len=5) "Image",
              Modifiers: ([]string) (len=1) {
                (string) (len=8) "contains"
              },
              Values: ([]interface {}) (len=1) {
                (string) (len=17) "\\Windows\\Temp\\DB\\"
              }
            },
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=14) "Image|endswith",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 37,
                Column: (int) 5
              }),
              Field: (string) (len=5) "Image",
              Modifiers: ([]string) (len=1) {
                (string) (len=8) "endswith"
              },
              Values: ([]interface {}) (len=1) {
                (string) (len=4) ".exe"
              }
            }
          }
        }
      },
      (string) (len=18) "selection_process3": (sigma.Search) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 4,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!map",
          Value: (string) "",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) (len=4) {
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=24) "CommandLine|contains|all",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 39,
              Column: (int) 5
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 2,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!seq",
              Value: (string) "",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) (len=2) {
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 4,
                  Tag: (string) (len=5) "!!str",
                  Value: (string) (len=13) "\\nslookup.exe",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 40,
                  Column: (int) 9
                }),
                (*yaml.Node)({
                  Kind: (yaml.Kind) 8,
                  Style: (yaml.Style) 4,
                  Tag: (string) (len=5) "!!str",
                  Value: (string) (len=6) "-q=TXT",
                  Anchor: (string) "",
                  Alias: (*yaml.Node)(<nil>),
                  Content: ([]*yaml.Node) <nil>,
                  HeadComment: (string) "",
                  LineComment: (string) "",
                  FootComment: (string) "",
                  Line: (int) 41,
                  Column: (int) 9
                })
              },
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 40,
              Column: (int) 7
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 0,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=20) "ParentImage|contains",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 42,
              Column: (int) 5
            }),
            (*yaml.Node)({
              Kind: (yaml.Kind) 8,
              Style: (yaml.Style) 4,
              Tag: (string) (len=5) "!!str",
              Value: (string) (len=7) "\\Autoit",
              Anchor: (string) "",
              Alias: (*yaml.Node)(<nil>),
              Content: ([]*yaml.Node) <nil>,
              HeadComment: (string) "",
              LineComment: (string) "",
              FootComment: (string) "",
              Line: (int) 42,
              Column: (int) 27
            })
          },
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 39,
          Column: (int) 5
        }),
        Keywords: ([]string) <nil>,
        EventMatchers: ([]sigma.EventMatcher) (len=1) {
          (sigma.EventMatcher) (len=2) {
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=24) "CommandLine|contains|all",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 39,
                Column: (int) 5
              }),
              Field: (string) (len=11) "CommandLine",
              Modifiers: ([]string) (len=2) {
                (string) (len=8) "contains",
                (string) (len=3) "all"
              },
              Values: ([]interface {}) (len=2) {
                (string) (len=13) "\\nslookup.exe",
                (string) (len=6) "-q=TXT"
              }
            },
            (sigma.FieldMatcher) {
              node: (*yaml.Node)({
                Kind: (yaml.Kind) 8,
                Style: (yaml.Style) 0,
                Tag: (string) (len=5) "!!str",
                Value: (string) (len=20) "ParentImage|contains",
                Anchor: (string) "",
                Alias: (*yaml.Node)(<nil>),
                Content: ([]*yaml.Node) <nil>,
                HeadComment: (string) "",
                LineComment: (string) "",
                FootComment: (string) "",
                Line: (int) 42,
                Column: (int) 5
              }),
              Field: (string) (len=11) "ParentImage",
              Modifiers: ([]string) (len=1) {
                (string) (len=8) "contains"
              },
              Values: ([]interface {}) (len=1) {
                (string) (len=7) "\\Autoit"
              }
            }
          }
        }
      }
    },
    Conditions: (sigma.Conditions) (len=1) {
      (sigma.Condition) {
        node: (*yaml.Node)({
          Kind: (yaml.Kind) 8,
          Style: (yaml.Style) 0,
          Tag: (string) (len=5) "!!str",
          Value: (string) (len=15) "1 of selection*",
          Anchor: (string) "",
          Alias: (*yaml.Node)(<nil>),
          Content: ([]*yaml.Node) <nil>,
          HeadComment: (string) "",
          LineComment: (string) "",
          FootComment: (string) "",
          Line: (int) 43,
          Column: (int) 14
        }),
        Search: (sigma.OneOfPattern) {
          Pattern: (string) (len=10) "selection*"
        },
        Aggregation: (sigma.AggregationExpr) <nil>
      }
    },
    Timeframe: (time.Duration) 0s
  },
  ID: (string) (len=36) "ce6e34ca-966d-41c9-8d93-5b06c8b97a06",
  Related: ([]sigma.RelatedRule) <nil>,
  Status: (string) (len=4) "test",
  Description: (string) (len=88) "Detects Chafer activity attributed to OilRig as reported in Nyotron report in March 2018",
  Author: (string) (len=82) "Florian Roth, Markus Neis, Jonhnathan Ribeiro, Daniil Yugoslavskiy, oscd.community",
  Level: (string) (len=4) "high",
  References: ([]string) (len=1) {
    (string) (len=69) "https://nyotron.com/nyotron-discovers-next-generation-oilrig-attacks/"
  },
  Tags: ([]string) (len=9) {
    (string) (len=18) "attack.persistence",
    (string) (len=12) "attack.g0049",
    (string) (len=16) "attack.t1053.005",
    (string) (len=12) "attack.s0111",
    (string) (len=16) "attack.t1543.003",
    (string) (len=22) "attack.defense_evasion",
    (string) (len=12) "attack.t1112",
    (string) (len=26) "attack.command_and_control",
    (string) (len=16) "attack.t1071.004"
  },
  AdditionalFields: (map[string]interface {}) (len=3) {
    (string) (len=4) "date": (string) (len=10) "2018/03/23",
    (string) (len=14) "falsepositives": ([]interface {}) (len=1) {
      (string) (len=7) "Unknown"
    },
    (string) (len=8) "modified": (string) (len=10) "2021/09/19"
  }
}
